"""Test HFN functions"""

import unittest

from ysp4000.hfn import VolumeMap


class TestHfnVolume(unittest.TestCase):
    """Volume tests"""

    def test_pct_to_code(self):  # pylint: disable=too-many-statements
        """Test 0-99 percents to codes"""
        self.assertEqual(VolumeMap.convert_pct(-1), '00')
        self.assertEqual(VolumeMap.convert_pct(0), '00')
        self.assertEqual(VolumeMap.convert_pct(1), '2C')
        self.assertEqual(VolumeMap.convert_pct(2), '32')
        self.assertEqual(VolumeMap.convert_pct(3), '38')
        self.assertEqual(VolumeMap.convert_pct(4), '3E')
        self.assertEqual(VolumeMap.convert_pct(5), '44')
        self.assertEqual(VolumeMap.convert_pct(6), '4A')
        self.assertEqual(VolumeMap.convert_pct(7), '50')
        self.assertEqual(VolumeMap.convert_pct(8), '56')
        self.assertEqual(VolumeMap.convert_pct(9), '5C')
        self.assertEqual(VolumeMap.convert_pct(10), '62')
        self.assertEqual(VolumeMap.convert_pct(11), '66')
        self.assertEqual(VolumeMap.convert_pct(12), '6A')
        self.assertEqual(VolumeMap.convert_pct(13), '6E')
        self.assertEqual(VolumeMap.convert_pct(14), '72')
        self.assertEqual(VolumeMap.convert_pct(15), '76')
        self.assertEqual(VolumeMap.convert_pct(16), '7A')
        self.assertEqual(VolumeMap.convert_pct(17), '7E')
        self.assertEqual(VolumeMap.convert_pct(18), '82')
        self.assertEqual(VolumeMap.convert_pct(19), '86')
        self.assertEqual(VolumeMap.convert_pct(20), '8A')
        self.assertEqual(VolumeMap.convert_pct(21), '8C')
        self.assertEqual(VolumeMap.convert_pct(22), '8E')
        self.assertEqual(VolumeMap.convert_pct(23), '90')
        self.assertEqual(VolumeMap.convert_pct(24), '92')
        self.assertEqual(VolumeMap.convert_pct(25), '94')
        self.assertEqual(VolumeMap.convert_pct(26), '96')
        self.assertEqual(VolumeMap.convert_pct(27), '98')
        self.assertEqual(VolumeMap.convert_pct(28), '9A')
        self.assertEqual(VolumeMap.convert_pct(29), '9C')
        self.assertEqual(VolumeMap.convert_pct(30), '9E')
        self.assertEqual(VolumeMap.convert_pct(39), 'B0')
        self.assertEqual(VolumeMap.convert_pct(40), 'B2')
        self.assertEqual(VolumeMap.convert_pct(41), 'B3')
        self.assertEqual(VolumeMap.convert_pct(42), 'B4')
        self.assertEqual(VolumeMap.convert_pct(43), 'B5')
        self.assertEqual(VolumeMap.convert_pct(44), 'B6')
        self.assertEqual(VolumeMap.convert_pct(45), 'B7')
        self.assertEqual(VolumeMap.convert_pct(46), 'B8')
        self.assertEqual(VolumeMap.convert_pct(47), 'B9')
        self.assertEqual(VolumeMap.convert_pct(48), 'BA')
        self.assertEqual(VolumeMap.convert_pct(49), 'BB')
        self.assertEqual(VolumeMap.convert_pct(50), 'BC')
        self.assertEqual(VolumeMap.convert_pct(60), 'C6')
        self.assertEqual(VolumeMap.convert_pct(70), 'D0')
        self.assertEqual(VolumeMap.convert_pct(80), 'DA')
        self.assertEqual(VolumeMap.convert_pct(90), 'E4')
        self.assertEqual(VolumeMap.convert_pct(99), 'ED')
        self.assertEqual(VolumeMap.convert_pct(100), 'EE')
        self.assertEqual(VolumeMap.convert_pct(101), 'EE')

    def test_code_to_pct(self):  # pylint: disable=too-many-statements
        """Test 00-EE codes to pct"""
        convert = VolumeMap().code_to_hfn

        self.assertEqual('0', convert('00'))
        self.assertEqual('0', convert('01'))
        self.assertEqual('0', convert('2A'))
        self.assertEqual('1', convert('2C'))
        self.assertEqual('2', convert('32'))
        self.assertEqual('3', convert('38'))
        self.assertEqual('4', convert('3E'))
        self.assertEqual('5', convert('44'))
        self.assertEqual('6', convert('4A'))
        self.assertEqual('7', convert('50'))
        self.assertEqual('8', convert('56'))
        self.assertEqual('9', convert('5C'))
        self.assertEqual('10', convert('62'))
        self.assertEqual('11', convert('66'))
        self.assertEqual('12', convert('6A'))
        self.assertEqual('13', convert('6E'))
        self.assertEqual('14', convert('72'))
        self.assertEqual('15', convert('76'))
        self.assertEqual('16', convert('7A'))
        self.assertEqual('17', convert('7E'))
        self.assertEqual('18', convert('82'))
        self.assertEqual('19', convert('86'))
        self.assertEqual('20', convert('8A'))
        self.assertEqual('21', convert('8C'))
        self.assertEqual('22', convert('8E'))
        self.assertEqual('23', convert('90'))
        self.assertEqual('24', convert('92'))
        self.assertEqual('25', convert('94'))
        self.assertEqual('26', convert('96'))
        self.assertEqual('27', convert('98'))
        self.assertEqual('28', convert('9A'))
        self.assertEqual('29', convert('9C'))
        self.assertEqual('30', convert('9E'))
        self.assertEqual('39', convert('B0'))
        self.assertEqual('40', convert('B2'))
        self.assertEqual('41', convert('B3'))
        self.assertEqual('42', convert('B4'))
        self.assertEqual('43', convert('B5'))
        self.assertEqual('44', convert('B6'))
        self.assertEqual('45', convert('B7'))
        self.assertEqual('46', convert('B8'))
        self.assertEqual('47', convert('B9'))
        self.assertEqual('48', convert('BA'))
        self.assertEqual('49', convert('BB'))
        self.assertEqual('50', convert('BC'))
        self.assertEqual('60', convert('C6'))
        self.assertEqual('70', convert('D0'))
        self.assertEqual('80', convert('DA'))
        self.assertEqual('90', convert('E4'))
        self.assertEqual('99', convert('ED'))

        self.assertEqual('100', convert('EE'))
        self.assertEqual('100', convert('EF'))
        self.assertEqual('100', convert('FF'))

        back = VolumeMap().code_to_hfn
        forth = VolumeMap.convert_pct

        for i in range(101):
            self.assertEqual(str(i), back(forth(i)))
